C00e 000	jmp	start		skip around variables
0000 001 i	dw	0	int index
0009 002 j	dw	0	int jdex
0008 003 jt	dw	0 	int jdexP
0070 004 b	dw	0	int baseAddress
000a 005 s	dw	0	int size 
0000 006 jc	dw	0	int jCurrent
0000 007 jn	dw	0	int jNext
0000 008 zero	dw	0	zero
0001 009 one	dw	1	one
4000 00a stit	dw	4000	storeit
3000 00b ldit	dw	3000	loadit
0000 00c			leave space for change
0000 00d		
3005 00e start	load	s	start and the loop
6001 00f	sub	i
d01b 010	jmpe	endL1	if(size - i == 0)
300a 011	load	stit	gets the storeit
5004 012	add	b	adds the base address
5001 013	add	i	adds the index
4016 014	store		plants the instruction
1000 015	readH
0000 016 doit	dw	0
3001 017	load	i	i++
5009 018	add	one	adds one
4001 019	store	i	stores i
c00e 01a 	jmp	loop
3008 01b	load	zero	set i to zero
4001 01c	store	i
3001 01d oloop	load	i	while(i < s)
6005 01e 	sub	s
d04f 01f	jmpe	prnt
3005 020	load	s	j = 9
6009 021	sub	one	
4002 022	store	j
3002 023	load	j	jt = 8
6009 024	sub	one
4003 025	store	jt	
3001 026 iloop	load	i	while(i < j)
6002 027	sub	i
d04b 028	jmpe	eiloop	
300b 029	load	ldit	jc = a[j]
5004 02a	add	b	
5002 02b	add	j
402d 02c	store	ldit	plant instructions
0000 02d doit	dw	ldit
4006 02e	store	jc
300b 02f	load	ldit	jn = a[j-1]
5004 030	add	b
5003 031	add	jt
4033 032	store	ldit	plant instructions
0000 033 doit	dw	ldit
4007 034	store	jn
3007 035	load	jn	if(jn - jc < 0)
6006 036	sub	jc
e044 037	jmpl	subj
300a 038	load	stit	a[j] = jn
5004 039	add	b
5002 03a	add	j
403d 03b	store	stit	plant instructions
3007 03c	load	jn
0000 03d doit	dw	stit
300a 03e	load	stit	a[j-1] = jc
5004 03f	add	b	
5003 040	add	jt	
4043 041	store	stit	plant instructions
3006 042	load	jc
0000 043 doit	dw	stit
3002 044 subj	load	j	j--
6009 045	sub	one
4002 046	store	j	
3003 047	load	jt	jt--
6009 048	sub	one
4003 049	store	jt
c026 04a	jmp	iloop
3001 04b eil	load	i	i++
5009 04c	add	one
4001 04d	store	i
c01d 04e	jmp 	oloop
3008 04f prnt	load	i	i=0
4001 050	store	i
3005 051 loop	load	s	if(s-i == 0)
6001 052	sub	i
d05e 053	jmpe	xit
300b 054	load	ldit	actually print stuff
5004 055	add	b	
5001 056	add	i
4058 057	store	ldit	plant instruction
0000 058 doit	dw	ldit
1800 059	printH
3001 05a	load	i	i++
5009 05b	add	one
4001 05c	store	i
c051 05d	jmp	loop
0000 05e xit	
