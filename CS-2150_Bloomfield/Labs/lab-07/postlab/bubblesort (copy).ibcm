C00e 000	jmp	start		skip around variables
0000 001 i	dw	0	int index
0009 002 j	dw	0	int jdex
0000 003 jt	dw	0 	int jdexP
0070 004 b	dw	0	int baseAddress
0003 005 s	dw	0	int size 
0000 006 jc	dw	0	int jCurrent
0000 007 jn	dw	0	int jNext
0000 008 zero	dw	0	zero
0001 009 one	dw	1	one
4000 00a stit	dw	4000	storeit
3000 00b ldit	dw	3000	loadit
0000 00c			leave space for change
0000 00d		
3005 00e start	load		start and the loop
6001 00f	sub	i
d01b 010	jmpe	endL1	if(size - i == 0)
300a 011	load	stit	gets the storeit
5004 012	add	b	adds the base address
5001 013	add	i	adds the index
4016 014	store		plants the instruction
1000 015	readH
0000 016 doit	dw	0
3001 017	load	i	i++
5009 018	add	one	adds one
4001 019	store	i	stores i
c00e 01a 	jmp	loop
3005 01b endL1	load	s	makes the jdex value
6009 01c	sub	one	
4002 01d	store	jdex
3008 01e	load	zero
4001 01f	store	i
3005 020 loop2	load	s	
6001 021	sub	i
d048 022	jmpe	print	end loop
3001 023 iloop	load 	i	
6002 024 	sub	j
d020 025	jmpe	loop2
3002 026	load	j	update jdexP
6009 027	sub	one	
4003 028	store	jt	
300b 029	load	ldit	loads a[j-1] and stores it
5004 02a	add	b
5003 02b	add	jt
402d 02c	store		plant the instruction
0000 02d doit	dw	
4007 02e	store	jn	
300b 02f	load 	ldit	loads a[j] and stores it
5004 030	add	b	
5002 031	add	j	
4033 032	store	ldit	
0000 033 doit	dw	ldit	
4006 034	store	jc
3007 035	load	jn	if(a[j-1]-a[j] < 0)
6006 036	sub	jc	
e044 037	jmpl	subj	just decrement j if a[j-1] < a[j]
300a 038	load	stid	a[j] = a[j-1]
5004 039	add	b	
5002 03a	add	j	
403a 03b	store	stit	plant the instruction	
3007 03c	load	jn	
0000 03d doit	dw	stit
300a 03e	load	stit	a[j-1] = a[j]
5004 03f	add	b	
5003 040	add	jt	
4040 041	store	stid	plant the instruction
3006 042	load	jc	
0000 043 doit	dw	stit
3002 044 subj	load	j	decrement j
6009 045	sub	one	
4002 046	store	j
c023 047	jmp	iloop	loopover
3001 048	load	i	increment i
5009 049	add	one
4001 04a	store	i
c020 04b	jmp	loop
3001 04c	load	zero	i = 0
4001 04d	store	i
3005 04e loop	load	s	printing stuff
6001 04f	sub	i	
d05b 050	jmpe	xit	end loop
300b 051	load	ldit	
5004 052	add	b	
5001 053	add	i
4055 054	store	stit	plants the instructions
0000 055 doit	dw	ldit
1800 056 	printH
3001 057	load	i	increment i
5009 058	add	one
4001 059	store	i	
c04e 05a	jmp	loop
0000 05b xit
