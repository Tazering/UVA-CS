C00A 000	jmp	start	skip around the variables
0000 001 x	dw	0	int x
0000 002 y	dw	0	int y
0000 003 z	dw	0 	int z
0000 004 sum	dw	0	int sum
0001 005 one 	dw	1	
0000 006 zero	dw	0
0000 007 			leave space for changes
0000 008
0000 009
1000 00A start 	readH		reads the first input
4001 00B	store	x	stores the value into x
1000 00C		readH		reads the second input
4002 00D	store	y	stores the value into y
1000 00E		readH		reads the third input
4003 00F	store	z	stores the value into z
3006 010	load	zero	loads the value of 0
4004 011	store	sum	stores 0 into the sum as a reset
3004 012	load	sum	
5001 013	add	x	adds a value of x
5002 014	add	y	adds a value of y
5003 015	add	z	adds a value of z
4004 016	store	sum	stores it into sum
3004 017	load	sum
1800 018	printH		prints the sum
D01B 019	jmpe	xit	goes to exit portion
C00A 01A	jmp	start	jumps to start if sum is not zero
3004 01B xit	load	sum	loads the sum if it is zero
3001 01C	load	x	loads the x value
1800 01D	printH
3002 01E	load	y	loads the y value
1800 01F	printH
3003 020	load	z	loads the z value
1800 021	printH	

